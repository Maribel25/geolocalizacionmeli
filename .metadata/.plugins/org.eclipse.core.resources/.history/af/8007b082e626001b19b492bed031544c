package com.meli.utils;

import java.util.List;

import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

import com.meli.exceptionHandler.CustomizedException;

public class RestClient {
	
	public static String get(String data, String endpoint) {
	   try{
		   String uri = endpoint + data;
		   RestTemplate restTemplate = new RestTemplate();
		   return restTemplate.getForObject(uri, String.class);
	   }catch(RestClientException e ) {
		   throw new CustomizedException("An error has occurred retriving information of service provider. please retry later");
	   }
	}
	
	public static String get(String data, String accessKey, String endpoint) {
	   try{
		   String uri = endpoint;
		   if(parameter!=null)
			   uri+=parameter;
		   uri+="access_key="+accessKey;
		   RestTemplate restTemplate = new RestTemplate();
		   return restTemplate.getForObject(uri, String.class);
	   }catch(RestClientException e ) {
		   throw new CustomizedException("An error has occurred retriving information of service provider. please retry later");
	   }
	}
	
	public static String get(List<String> parameter, String endpoint) {
		   try{
			   String uri = endpoint + parameter;
			   if(parameter!=null && parameter.size()>0) {
				   for (String prm : parameter) {
					uri+="&"+prm;
				}
			   }
			   RestTemplate restTemplate = new RestTemplate();
			   return restTemplate.getForObject(uri, String.class);
		   }catch(RestClientException e ) {
			   throw new CustomizedException("An error has occurred retriving information of service provider. please retry later");
		   }
		}

	/**
	 * getGeoForIp
	 * @param <T>
	 * @param ip
	 * @return String
	 */
	//ver manejo de errores
	@SuppressWarnings("unchecked")
	private static <T> T getGeoForIp(String ip){
	    final String uri = EndpointConst.geoIp + ip;
	    RestTemplate restTemplate = new RestTemplate();
	    T result;
	    try{
	    	result = (T)restTemplate.getForObject(uri, String.class);
	    }catch (HttpClientErrorException e ) {
			result = (T)e.getStatusCode(); 
		}
	    return result;
	}
	
	/**
	 * getContryCodeInfo
	 * @param countryCode
	 * @return String
	 */
	private static String getContryCodeInfo(String countryCode){
	    final String uri = EndpointConst.countryCodeInfo + countryCode;
	    RestTemplate restTemplate = new RestTemplate();
	    return restTemplate.getForObject(uri, String.class);
	}
	
	/**
	 * getDataFixerLatestInfo
	 * @param currencyCode
	 */
	private static String getDataFixerLatestInfo(String currencyCode){
		String access_key = "44262cdf6064d216d0da23d7f5fba945";
	    final String uri = EndpointConst.dataFixerLatest+"access_key="+access_key;
	    RestTemplate restTemplate = new RestTemplate();
	    return restTemplate.getForObject(uri, String.class);
	}

}
